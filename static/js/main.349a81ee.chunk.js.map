{"version":3,"sources":["components/LicenseNumberForm.jsx","components/LookupForm.jsx","components/withSocrataQuery.jsx","components/SimpleResultsTable.jsx","utils/theme.js","App.jsx","serviceWorker.js","index.js"],"names":["styles","theme","form","display","flexDirection","LicenseNumberFormPresentation","props","handleSubmit","handleChange","licenseNumber","classes","react_default","a","createElement","autoComplete","noValidate","className","TextField_default","id","label","value","onChange","type","margin","variant","InputLabelProps","shrink","Button_default","color","onClick","React","Component","LookupFormInternal","zipCode","businessName","LookupForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","FormStyled","withStyles","bind","assertThisInitialized","submitLocal","event","key","target","setState","defineProperty","_this$state","preventDefault","operatorArity","operator","_this$state2","withSocrataQuery","WrappedComponent","queryObjectList","pageSize","arguments","length","undefined","offset","buildQueryString","queryString","criteriaCount","map","query","index","toUpperCase","queryURI","encodeURI","_React$Component","_class","socrataData","error","page","pageChange","setPage","setPageSize","inherits","createClass","_this2","resourceString","console","log","fetch","then","res","json","result","_this3","buildQueryURI","TableHeadInternal","TableHead_default","TableRow_default","numeric","column","TableCell_default","TableBodyInternal","rowsPerPage","onChangePage","onChangeRowsPerPage","Table_default","TableBody_default","datum","doing_business_as_name","legal_name","license_number","expiration_date","TableFooter_default","TablePagination_default","labelDisplayedRows","_ref","from","to","count","concat","SimpleResultsTable","_this$props","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","App","submitted","TableComponent","CssBaseline_default","root","grow","AppBar_default","position","Toolbar_default","Typography_default","Paper_default","container","components_LookupForm","alignItems","justifyContent","minHeight","flexGrow","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.349a81ee.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = theme => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n});\n\nfunction LicenseNumberFormPresentation(props) {\n  const { handleSubmit, handleChange, licenseNumber, classes } = props;\n  return (\n    <form autoComplete=\"off\" noValidate className={classes.form}>\n      <TextField\n        id=\"license-number\"\n        label=\"License Number\"\n        value={licenseNumber}\n        onChange={handleChange}\n        type=\"number\"\n        margin=\"normal\"\n        variant=\"filled\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleSubmit}>\n        Search\n      </Button>\n    </form>\n  );\n}\n\nclass LicenseNumberForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      licenseNumber: '',\n      LNFPStyled: withStyles(styles)(LicenseNumberFormPresentation),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitLocal = this.submitLocal.bind(this);\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    this.setState({\n      licenseNumber: event.target.value,\n    });\n  }\n\n  submitLocal(event) {\n    const { handleSubmit } = this.props;\n    const { licenseNumber } = this.state;\n    event.preventDefault();\n    if(this.state.licenseNumber != '') {\n      handleSubmit({\n        license_number: licenseNumber,\n      });\n    }\n  }\n\n  render() {\n    const { licenseNumber, LNFPStyled } = this.state;\n    return <LNFPStyled \n      handleSubmit={this.submitLocal}\n      handleChange={this.handleChange} \n      licenseNumber={licenseNumber} \n    />\n  }\n}\n\nexport default LicenseNumberForm;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n};\n\nfunction LookupFormInternal(props) {\n  const { handleSubmit, handleChange, zipCode, businessName, classes } = props;\n  return (\n    <form autoComplete=\"off\" noValidate className={classes.form}>\n      <TextField\n        id='zipCode'\n        label='Zip Code'\n        value={zipCode}\n        onChange={handleChange}\n        type='number'\n        margin='normal'\n        variant='filled'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='businessName'\n        label='Business Name'\n        value={businessName}\n        onChange={handleChange}\n        margin='normal'\n        variant='filled'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <Button variant='contained' color='primary' onClick={handleSubmit}>\n        Search\n      </Button>\n    </form>\n  );\n}\n\nclass LookupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businessName: \"\",\n      zipCode: \"\",\n      FormStyled: withStyles(styles)(LookupFormInternal),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitLocal = this.submitLocal.bind(this);\n  }\n\n  handleChange(event) {\n    const key = event.target.id;\n    const value = event.target.value;\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  submitLocal(event) {\n    const { handleSubmit } = this.props;\n    const { businessName, zipCode } = this.state;\n    event.preventDefault();\n    handleSubmit([\n      { key: 'legal_name', value: businessName, operatorArity: 'infixWord', operator: 'like', type: 'text'  },\n      { key: 'doing_business_as_name', value: businessName, operatorArity: 'infixWord', operator: 'like', type: 'text'  },\n      { key: 'zip_code', value: zipCode, operatorArity: 'infix', operator: '=', type: 'number' },\n    ]);\n  }\n\n  render() {\n    const { businessName, zipCode, FormStyled } = this.state;\n    return (\n      <FormStyled\n        handleSubmit={this.submitLocal}\n        handleChange={this.handleChange}\n        zipCode={zipCode}\n        businessName={businessName}\n      />\n    );\n  }\n}\n\nexport default LookupForm;\n","import React from 'react';\n\n// Returns a new component that passes down queried socrata data\n// from the Chiago business license dataset\n//\n// queryObject - object that describes the query string\n// pageSize - objects per page\n// offset - how many objects to get (i.e. how many pages in are we, a multiple of pageSize)\n\n// queryObject structure --\n// {\n//  key: name of socrata field\n//  operatorArity: infix or function\n//  operator: =, like, etc\n//  type: text, number, etc\n//  value: value of key\n// }\n//\n//\n// BIG OL' TODO: create a plan to develop some utility functions to build query strings more robustly &\n// with more seperation of concerns.\n\nfunction withSocrataQuery(WrappedComponent, queryObjectList, pageSize = 5, offset = 0) {\n  function buildQueryString(queryObjectList, pageSize, offset) {\n    let queryString = \"$limit=\" + pageSize + \"&$offset=\" + offset + \"&$where=\";\n    let criteriaCount = 0;\n    queryObjectList.map((query, index) => {\n      if(query.value !== null && query.value !== ''){\n        if(index !== 0 && criteriaCount > 0) {\n          queryString = queryString + ' OR ';\n        }\n        let value = query.value;\n        let key = query.key;\n        if(query.type === 'text') {\n          key = 'UPPER(' + query.key + ')';\n          value = \"'%\" + query.value.toUpperCase() + \"%'\";\n        } else {\n          value = \"'\" + query.value + \"'\";\n        }\n        if(query.operatorArity === 'infixWord') {\n          queryString = queryString + key + ' ' + query.operator + ' ' + value;\n        } else if(query.operatorArity === 'function') {\n          queryString = queryString + query.operator + ' ' + key + ', ' + value + ')';\n        } else if(query.operatorArity === 'infix') {\n          queryString = queryString + key + query.operator + value;\n        }\n        criteriaCount++;\n      } \n    });\n    return queryString;\n  }\n\n  let queryString = buildQueryString(queryObjectList, pageSize, offset);\n  const queryURI = encodeURI(queryString);\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        socrataData: null,\n        error: null,\n        pageSize,\n        page: offset / pageSize,\n        pageChange: false,\n      };\n      this.setPage = this.setPage.bind(this);\n      this.setPageSize = this.setPageSize.bind(this);\n    }\n\n    buildQueryURI(pageSize, page) {\n      const offset = page * pageSize;\n      const queryString = buildQueryString(queryObjectList, pageSize, offset);\n\n      const queryURI = encodeURI(queryString);\n\n      return queryURI;\n    }\n\n    setPage(page) {\n      this.setState({\n        page,\n        pageChange: true,\n      });\n    }\n\n    setPageSize(pageSize) {\n      this.setState({\n        pageSize,\n        pageChange: true,\n      });\n    }\n\n    componentDidMount() {\n      const resourceString = \"https://data.cityofchicago.org/resource/xqx5-8hwx.json?$$app_token=7wM9LP6DnrCm11OI0KnTGl75T&$order=expiration_date DESC&\";\n      console.log(resourceString + queryURI);\n      fetch(resourceString + queryURI) //this is the queryURI we built at the beginning of the function\n        .then(res => res.json())\n        .then( (result) => {\n          this.setState({\n            socrataData: result,\n          });\n        }, (error) => {\n          this.setState({\n            error\n          });\n        });\n    }\n\n    componentDidUpdate() {\n      const { pageSize, page } = this.state;\n      if(this.state.pageChange === true) {\n        const resourceString = \"https://data.cityofchicago.org/resource/xqx5-8hwx.json?$$app_token=7wM9LP6DnrCm11OI0KnTGl75T&$order=expiration_date DESC&\";\n        fetch(resourceString + this.buildQueryURI(pageSize, page))\n          .then(res => res.json())\n          .then( (result) => {\n            this.setState({\n              socrataData: result,\n            });\n          }, (error) => {\n            this.setState({\n              error\n            });\n          });\n        this.setState({\n          pageChange: false,\n        });\n      }\n    }\n\n    render() {\n      const { socrataData, error, page, pageSize } = this.state;\n      return <WrappedComponent \n        socrataData={socrataData} \n        error={error} \n        setPage={this.setPage}\n        setPageSize={this.setPageSize}\n        page={page}\n        pageSize={pageSize}\n      />\n    }\n  }\n}\n\nexport default withSocrataQuery;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles'; \nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\n\n// This component consumes a JSON Socrata response from the City of Chicago business license database\n// and produces a paginated table of license results showing just number, legal name, dba name, and expiration date.\n\nfunction TableHeadInternal(props){\n  const columns = [\n    { id: 'dba_name', numeric: false, label: 'Doing Business As'  },\n    { id: 'legal_name', numeric: false, label: 'Legal Name' },\n    { id: 'license_number', numeric: true, label: 'License Number' },\n    { id: 'expiration_date', numeric: false, label: 'Expiration Date' },\n  ];\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map(column => {\n          return (\n            <TableCell key={column.id} numeric={column.numeric}>\n              { column.label }\n            </TableCell>\n          );\n        })}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nfunction TableBodyInternal(props) {\n  const { socrataData, page, rowsPerPage, onChangePage, onChangeRowsPerPage } = props;\n  if(socrataData == null) {\n    return null;\n  }\n  return (\n    <Table>\n      <TableHeadInternal />\n      <TableBody>\n        {socrataData.map(datum => {\n          return (\n            <TableRow key={datum.id}>\n              <TableCell>\n                {datum.doing_business_as_name}\n              </TableCell>\n              <TableCell>\n                {datum.legal_name}\n              </TableCell>\n              <TableCell numeric>\n                {datum.license_number}\n              </TableCell>\n              <TableCell>\n                {datum.expiration_date}\n              </TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          <TablePagination\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={onChangePage}\n            onChangeRowsPerPage={onChangeRowsPerPage}\n            labelDisplayedRows={({from, to, count}) => `${from}-${from + rowsPerPage}`}\n          />\n        </TableRow>\n      </TableFooter>\n    </Table>\n  );\n}\n\nclass SimpleResultsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangeRowsPerPage = this.onChangeRowsPerPage.bind(this);\n  }\n\n  onChangePage(event, page) {\n    event.preventDefault();\n    this.props.setPage(page);\n  }\n\n  onChangeRowsPerPage(event) {\n    event.preventDefault();\n    this.props.setPageSize(event.target.value);\n  }\n\n  render() {\n    const { socrataData, page, pageSize } = this.props;\n    return <TableBodyInternal\n      socrataData={socrataData}  \n      onChangePage={this.onChangePage}\n      onChangeRowsPerPage={this.onChangeRowsPerPage}\n      page={page}\n      rowsPerPage={pageSize}\n    />;\n  }\n}\n\nexport default SimpleResultsTable;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#b3ddf2',\n    },\n    secondary: {\n      main: '#ff0000',\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;\n","import React, { Component } from 'react';\nimport LicenseNumberForm from './components/LicenseNumberForm';\nimport LookupForm from './components/LookupForm';\nimport withSocrataQuery from './components/withSocrataQuery';\nimport SimpleResultsTable from './components/SimpleResultsTable';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport theme from './utils/theme';\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: '100vh',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n};\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n      query: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(query) {\n    this.setState({\n      query,\n      submitted: true\n    });\n  }\n\n  render() {\n    const { submitted, query } = this.state;\n    const { classes } = this.props;\n    let TableComponent = submitted ? withSocrataQuery(SimpleResultsTable, query) : null;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className={classes.root}>\n          <div className={classes.grow}>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n                  Chicago Business Search\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <Paper className={classes.container}>\n            <LookupForm handleSubmit={this.handleSubmit} />\n            {submitted ? <TableComponent /> : null}\n          </Paper>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}