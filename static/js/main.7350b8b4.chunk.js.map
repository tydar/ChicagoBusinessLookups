{"version":3,"sources":["components/LookupForm.jsx","components/withSocrataQuery.jsx","components/SimpleResultsTable.jsx","utils/theme.js","App.jsx","serviceWorker.js","index.js"],"names":["styles","form","display","flexDirection","LookupFormInternal","props","handleSubmit","handleChange","zipCode","businessName","classes","react_default","a","createElement","autoComplete","noValidate","className","TextField_default","id","label","value","onChange","type","margin","variant","InputLabelProps","shrink","Button_default","color","onClick","LookupForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","FormStyled","withStyles","bind","assertThisInitialized","submitLocal","event","key","target","setState","defineProperty","_this$state","preventDefault","operatorArity","operator","_this$state2","React","Component","withSocrataQuery","WrappedComponent","queryObjectList","pageSize","arguments","length","undefined","offset","buildQueryString","queryString","criteriaCount","map","query","index","toUpperCase","queryURI","encodeURI","_React$Component","_class","socrataData","error","page","pageChange","setPage","setPageSize","inherits","createClass","_this2","resourceString","console","log","fetch","then","res","json","result","_this3","buildQueryURI","TableHeadInternal","TableHead_default","TableRow_default","numeric","column","TableCell_default","TableBodyInternal","rowsPerPage","onChangePage","onChangeRowsPerPage","Table_default","TableBody_default","datum","doing_business_as_name","legal_name","license_number","expiration_date","TableFooter_default","TablePagination_default","labelDisplayedRows","_ref","from","to","count","concat","SimpleResultsTable","_this$props","Paper_default","tableWrapper","table","theme","overflowX","marginTop","spacing","unit","width","minWidth","createMuiTheme","palette","primary","main","secondary","typography","useNextVariants","App","submitted","TableComponent","CssBaseline_default","Helmet","root","grow","AppBar_default","position","Toolbar_default","Typography_default","container","text","components_LookupForm","minHeight","alignItems","alignSelf","flexGrow","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7350b8b4.chunk.js","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  }\n};\n\nfunction LookupFormInternal(props) {\n  const { handleSubmit, handleChange, zipCode, businessName, classes } = props;\n  return (\n    <form autoComplete=\"off\" noValidate className={classes.form}>\n      <TextField\n        id='zipCode'\n        label='Zip Code'\n        value={zipCode}\n        onChange={handleChange}\n        type='number'\n        margin='normal'\n        variant='filled'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id='businessName'\n        label='Business Name'\n        value={businessName}\n        onChange={handleChange}\n        margin='normal'\n        variant='filled'\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <Button variant='contained' color='primary' onClick={handleSubmit}>\n        Search\n      </Button>\n    </form>\n  );\n}\n\nclass LookupForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      businessName: \"\",\n      zipCode: \"\",\n      FormStyled: withStyles(styles)(LookupFormInternal),\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.submitLocal = this.submitLocal.bind(this);\n  }\n\n  handleChange(event) {\n    const key = event.target.id;\n    const value = event.target.value;\n    this.setState({\n      [key]: value,\n    });\n  }\n\n  submitLocal(event) {\n    const { handleSubmit } = this.props;\n    const { businessName, zipCode } = this.state;\n    event.preventDefault();\n    handleSubmit([\n      { key: 'legal_name', value: businessName, operatorArity: 'infixWord', operator: 'like', type: 'text'  },\n      { key: 'doing_business_as_name', value: businessName, operatorArity: 'infixWord', operator: 'like', type: 'text'  },\n      { key: 'zip_code', value: zipCode, operatorArity: 'infix', operator: '=', type: 'number' },\n    ]);\n  }\n\n  render() {\n    const { businessName, zipCode, FormStyled } = this.state;\n    return (\n      <FormStyled\n        handleSubmit={this.submitLocal}\n        handleChange={this.handleChange}\n        zipCode={zipCode}\n        businessName={businessName}\n      />\n    );\n  }\n}\n\nexport default LookupForm;\n","import React from 'react';\n\n// Returns a new component that passes down queried socrata data\n// from the Chiago business license dataset\n//\n// queryObject - object that describes the query string\n// pageSize - objects per page\n// offset - how many objects to get (i.e. how many pages in are we, a multiple of pageSize)\n\n// queryObject structure --\n// {\n//  key: name of socrata field\n//  operatorArity: infix or function\n//  operator: =, like, etc\n//  type: text, number, etc\n//  value: value of key\n// }\n//\n//\n// BIG OL' TODO: create a plan to develop some utility functions to build query strings more robustly &\n// with more seperation of concerns.\n\nfunction withSocrataQuery(WrappedComponent, queryObjectList, pageSize = 5, offset = 0) {\n  function buildQueryString(queryObjectList, pageSize, offset) {\n    let queryString = \"$limit=\" + pageSize + \"&$offset=\" + offset + \"&$where=\";\n    let criteriaCount = 0;\n    queryObjectList.map((query, index) => {\n      if(query.value !== null && query.value !== ''){\n        if(index !== 0 && criteriaCount > 0) {\n          queryString = queryString + ' OR ';\n        }\n        let value = query.value;\n        let key = query.key;\n        if(query.type === 'text') {\n          key = 'UPPER(' + query.key + ')';\n          value = \"'%\" + query.value.toUpperCase() + \"%'\";\n        } else {\n          value = \"'\" + query.value + \"'\";\n        }\n        if(query.operatorArity === 'infixWord') {\n          queryString = queryString + key + ' ' + query.operator + ' ' + value;\n        } else if(query.operatorArity === 'function') {\n          queryString = queryString + query.operator + ' ' + key + ', ' + value + ')';\n        } else if(query.operatorArity === 'infix') {\n          queryString = queryString + key + query.operator + value;\n        }\n        criteriaCount++;\n      } \n    });\n    return queryString;\n  }\n\n  let queryString = buildQueryString(queryObjectList, pageSize, offset);\n  const queryURI = encodeURI(queryString);\n\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        socrataData: null,\n        error: null,\n        pageSize,\n        page: offset / pageSize,\n        pageChange: false,\n      };\n      this.setPage = this.setPage.bind(this);\n      this.setPageSize = this.setPageSize.bind(this);\n    }\n\n    buildQueryURI(pageSize, page) {\n      const offset = page * pageSize;\n      const queryString = buildQueryString(queryObjectList, pageSize, offset);\n\n      const queryURI = encodeURI(queryString);\n\n      return queryURI;\n    }\n\n    setPage(page) {\n      this.setState({\n        page,\n        pageChange: true,\n      });\n    }\n\n    setPageSize(pageSize) {\n      this.setState({\n        pageSize,\n        pageChange: true,\n      });\n    }\n\n    componentDidMount() {\n      const resourceString = \"https://data.cityofchicago.org/resource/xqx5-8hwx.json?$$app_token=7wM9LP6DnrCm11OI0KnTGl75T&$order=expiration_date DESC&\";\n      console.log(resourceString + queryURI);\n      fetch(resourceString + queryURI) //this is the queryURI we built at the beginning of the function\n        .then(res => res.json())\n        .then( (result) => {\n          this.setState({\n            socrataData: result,\n          });\n        }, (error) => {\n          this.setState({\n            error\n          });\n        });\n    }\n\n    componentDidUpdate() {\n      const { pageSize, page } = this.state;\n      if(this.state.pageChange === true) {\n        const resourceString = \"https://data.cityofchicago.org/resource/xqx5-8hwx.json?$$app_token=7wM9LP6DnrCm11OI0KnTGl75T&$order=expiration_date DESC&\";\n        fetch(resourceString + this.buildQueryURI(pageSize, page))\n          .then(res => res.json())\n          .then( (result) => {\n            this.setState({\n              socrataData: result,\n            });\n          }, (error) => {\n            this.setState({\n              error\n            });\n          });\n        this.setState({\n          pageChange: false,\n        });\n      }\n    }\n\n    render() {\n      const { socrataData, error, page, pageSize } = this.state;\n      return <WrappedComponent \n        socrataData={socrataData} \n        error={error} \n        setPage={this.setPage}\n        setPageSize={this.setPageSize}\n        page={page}\n        pageSize={pageSize}\n      />\n    }\n  }\n}\n\nexport default withSocrataQuery;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles'; \nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Paper from '@material-ui/core/Paper';\n\n// This component consumes a JSON Socrata response from the City of Chicago business license database\n// and produces a paginated table of license results showing just number, legal name, dba name, and expiration date.\n\nconst styles = theme => ({\n  tableWrapper: {\n    overflowX: \"auto\",\n    marginTop: theme.spacing.unit * 3,\n    width: '100%',\n  },\n  table: {\n    minWidth: 700,\n  }\n});\n\nfunction TableHeadInternal(props){\n  const columns = [\n    { id: 'dba_name', numeric: false, label: 'Doing Business As'  },\n    { id: 'legal_name', numeric: false, label: 'Legal Name' },\n    { id: 'license_number', numeric: true, label: 'License Number' },\n    { id: 'expiration_date', numeric: false, label: 'Expiration Date' },\n  ];\n  return (\n    <TableHead>\n      <TableRow>\n        {columns.map(column => {\n          return (\n            <TableCell key={column.id} numeric={column.numeric}>\n              { column.label }\n            </TableCell>\n          );\n        })}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nfunction TableBodyInternal(props) {\n  const { socrataData, page, rowsPerPage, onChangePage, onChangeRowsPerPage, className } = props;\n  if(socrataData == null) {\n    return null;\n  }\n  return (\n    <Table className={className}>\n      <TableHeadInternal />\n      <TableBody>\n        {socrataData.map(datum => {\n          return (\n            <TableRow key={datum.id}>\n              <TableCell>\n                {datum.doing_business_as_name}\n              </TableCell>\n              <TableCell>\n                {datum.legal_name}\n              </TableCell>\n              <TableCell numeric>\n                {datum.license_number}\n              </TableCell>\n              <TableCell>\n                {datum.expiration_date}\n              </TableCell>\n            </TableRow>\n          );\n        })}\n      </TableBody>\n      <TableFooter>\n        <TableRow>\n          {/* We have to do a manual calculation of \"to\" in pagination because\n            * I'm not pulling one from Socrata at the top.\n            * That is a todo.\n            */}\n            <TablePagination\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={onChangePage}\n              onChangeRowsPerPage={onChangeRowsPerPage}\n              labelDisplayedRows={({from, to, count}) => `${from}-${from + rowsPerPage - 1}`}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n  );\n}\n\nclass SimpleResultsTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onChangeRowsPerPage = this.onChangeRowsPerPage.bind(this);\n  }\n\n  onChangePage(event, page) {\n    event.preventDefault();\n    this.props.setPage(page);\n  }\n\n  onChangeRowsPerPage(event) {\n    event.preventDefault();\n    this.props.setPageSize(event.target.value);\n  }\n\n  render() {\n    const { socrataData, page, pageSize, classes } = this.props;\n    return (\n      <Paper className={classes.tableWrapper}>\n        <TableBodyInternal\n          socrataData={socrataData}  \n          onChangePage={this.onChangePage}\n          onChangeRowsPerPage={this.onChangeRowsPerPage}\n          page={page}\n          rowsPerPage={pageSize}\n          className={classes.table}\n        />\n      </Paper>);\n  }\n}\n\nexport default withStyles(styles)(SimpleResultsTable);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#b3ddf2',\n    },\n    secondary: {\n      main: '#ff0000',\n    }\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;\n","import React, { Component } from 'react';\nimport LookupForm from './components/LookupForm';\nimport withSocrataQuery from './components/withSocrataQuery';\nimport SimpleResultsTable from './components/SimpleResultsTable';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport theme from './utils/theme';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    alignSelf: 'center',\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  text: {\n    alignSelf: 'start',\n    marginTop: theme.spacing.unit,\n    marginLeft: theme.spacing.unit,\n  },\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      submitted: false,\n      query: [],\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(query) {\n    this.setState({\n      query,\n      submitted: true\n    });\n  }\n\n  render() {\n    const { submitted, query } = this.state;\n    const { classes } = this.props;\n    let TableComponent = submitted ? withSocrataQuery(SimpleResultsTable, query) : null;\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <Helmet>\n          <title>Chicago Business Lookup</title>\n        </Helmet>\n        <div className={classes.root}>\n          <div className={classes.grow}>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <Typography variant=\"title\" color=\"inherit\" className={classes.grow}>\n                  Chicago Business Search\n                </Typography>\n              </Toolbar>\n            </AppBar>\n          </div>\n          <Paper className={classes.root}>\n            <div className={classes.container}>\n              <Typography variant=\"subheading\" color=\"inherit\" className={classes.text}>\n                Quick, dead-simple business lookups using City of Chicago data\n              </Typography>\n              <Typography variant=\"body 2\" color=\"inherit\" className={classes.text}>\n                Use this tool to look up the status of business licenses based on their legal or DBA name or zip code. Coming soon: more advanced filtering\n                and the ability to lookup by multiple criteria at once.\n              </Typography>\n              <LookupForm handleSubmit={this.handleSubmit} />\n            </div>\n            {submitted ? <TableComponent /> : null}\n          </Paper>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}